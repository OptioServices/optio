syntax = "proto3";

package optio.distribute;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "optio/distribute/params.proto";

option go_package = "github.com/OptioServices/optio/x/distribute/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/OptioServices/optio/distribute/params";
  
  }
  
  // Queries a list of DailyDistributionTotal items.
  rpc DailyDistributionTotal    (QueryGetDailyDistributionTotalRequest) returns (QueryGetDailyDistributionTotalResponse) {
    option (google.api.http).get = "/OptioServices/optio/distribute/daily_distribution_total/{date}";
  
  }
  rpc DailyDistributionTotalAll (QueryAllDailyDistributionTotalRequest) returns (QueryAllDailyDistributionTotalResponse) {
    option (google.api.http).get = "/OptioServices/optio/distribute/daily_distribution_total";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetDailyDistributionTotalRequest {
  string date = 1;
}

message QueryGetDailyDistributionTotalResponse {
  uint64 total = 1;
}

message QueryAllDailyDistributionTotalRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDailyDistributionTotalResponse {
  repeated DailyDistributionTotalEntry dailyDistributionTotals = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message DailyDistributionTotalEntry {
    string date = 1;
    string amount = 2;
}

